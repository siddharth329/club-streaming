// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


// HELPERS
enum Role {
  USER
  PREMIUM
  ADMIN
}

model Tag {
  @@map(name: "tag")
  id          Int     @id @default(autoincrement())
  name        String  @unique
  episodes    Episode[]
}

// MODELS
// -- User Model
model User {
  @@map(name: "user")
  id          Int      @id @default(autoincrement())
  email       String   @db.VarChar(30) @unique
  password    String   @db.VarChar(70)
  name        String   @db.VarChar(30)
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  role        Role     @default(USER)
  planExpiry  DateTime?
  isPaid      Boolean  @default(false)
  favorites   Favorite[]
  verified    Boolean  @default(false)

  token       Token[]
  orders      Order[]
}

enum Gender {
  MALE
  FEMALE
}

// -- Actors Model
model Model {
  @@map(name: "model")
  id          Int     @id @default(autoincrement())
  name        String
  sex         Gender
  episodes    Episode[]
  thumbnail   String  @db.VarChar(20)
  createdAt   DateTime @default(now())
}

// -- Episode Model
model Episode {
  @@map(name: "episode")
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(30) @unique
  info        String   @db.VarChar(500)
  models      Model[]
  duration    Int
  thumbnail   String   @db.VarChar(20)
  preview     String   @db.VarChar(20)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  favCount    Int      @default(0)
  views       Int      @default(0)
  published   Boolean  @default(false)
  publishedAt DateTime?

  video_id    String

  tags        Tag[]
  favorites   Favorite[]
}

// -- Series Model
// model Series {
//   @@map(name: "series")
//   id          Int      @id @default(autoincrement())
//   name        String   @db.VarChar(30)
//   info        String   @db.VarChar(500)
//   thumbnail   String   @db.VarChar(20)
//   episodes    Episode[]
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @default(now())
// }

// -- Favorites Model
model Favorite {
  @@map(name: "favorite")
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [user_id], references: [id])
  user_id     Int      
  episode     Episode  @relation(fields: [episode_id], references: [id])
  episode_id  Int
  createdAt   DateTime @default(now())
}


enum TokenType {
  EMAIL_VERIFICATION
  FORGOT_PASSWORD
  UNIQUE_UUID_LOGIN
}

model Token {
  @@map(name: "token")
  id          Int      @id @default(autoincrement())
  type        TokenType
  value       String   
  expiration  DateTime
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [user_id], references: [id])
  user_id     Int
}

enum PlanType {
  BASIC
  LIMITED
}

model Order {
  @@map(name: "order")
  id          Int      @id @default(autoincrement())
  price       Float
  plan        PlanType
  paymentMethod String  
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [user_id], references: [id])
  user_id     Int
}

enum ContentHostingType {
  CDN_MONGO
}
